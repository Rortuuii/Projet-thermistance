[
    {
        "id": "3078d2e5e2fd43ad",
        "type": "tab",
        "label": "Flux 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5809c798755ae726",
        "type": "mqtt in",
        "z": "3078d2e5e2fd43ad",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b2b88afae323197b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 520,
        "wires": [
            [
                "ca2754479dc1ec47",
                "022ef7f25dfd6e3a"
            ]
        ]
    },
    {
        "id": "ef9e0cd166382f7b",
        "type": "debug",
        "z": "3078d2e5e2fd43ad",
        "name": "Msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 320,
        "wires": []
    },
    {
        "id": "ca2754479dc1ec47",
        "type": "function",
        "z": "3078d2e5e2fd43ad",
        "name": "Traitement données",
        "func": "msg.payload = msg.payload.uplink_message.decoded_payload.temperature;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 520,
        "wires": [
            [
                "083e3533512a94ba",
                "f01c90f94ce0b68e",
                "d5c7fed7c8271d2b",
                "ef9e0cd166382f7b",
                "949cc9881ac38ad4"
            ]
        ]
    },
    {
        "id": "f01c90f94ce0b68e",
        "type": "function",
        "z": "3078d2e5e2fd43ad",
        "name": "T min",
        "func": "// Vérifier si on souhaite réinitialiser (reset)\nif (msg.payload === \"reset\") {\n    flow.set(\"minVal\", null);\n\n    msg.payload = \"Valeur réinitialisée\";\n    return msg;\n}\n\nvar currentValue = msg.payload;\n\n// Récupération de la valeur minimale stockée dans le contexte\nvar minVal = flow.get(\"minVal\");\n\nif (minVal === undefined || minVal === null) {\n    minVal = currentValue;\n} else {\n   //mise a jour de la valeur de temp\n    if (currentValue < minVal) {\n        minVal = currentValue;\n    }\n}\n// Stock la valeur min\nflow.set(\"minVal\", minVal);\n\nmsg.payload = minVal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 580,
        "wires": [
            [
                "c55ff277f9dc8c19"
            ]
        ]
    },
    {
        "id": "083e3533512a94ba",
        "type": "function",
        "z": "3078d2e5e2fd43ad",
        "name": "T max",
        "func": "\nif (msg.payload === \"reset\") {\n    flow.set(\"maxVal\", null);\n\n    msg.payload = \"Valeur réinitialisée\";\n    return msg;\n}\n\nvar currentValue = msg.payload;\n\nvar maxVal = flow.get(\"maxVal\");\n\nif (maxVal === undefined || maxVal === null) {\n    maxVal = currentValue;\n} else {\n\n    if (currentValue > maxVal) {\n        maxVal = currentValue;\n    }\n}\n\n// Stockage val max\nflow.set(\"maxVal\", maxVal);\n\nmsg.payload = maxVal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "3a57bfb613803da5"
            ]
        ]
    },
    {
        "id": "3a57bfb613803da5",
        "type": "ui_text",
        "z": "3078d2e5e2fd43ad",
        "group": "2e34d2833eadd341",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "T°C max",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 1340,
        "y": 660,
        "wires": []
    },
    {
        "id": "c55ff277f9dc8c19",
        "type": "ui_text",
        "z": "3078d2e5e2fd43ad",
        "group": "2e34d2833eadd341",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "T°C min",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 1340,
        "y": 580,
        "wires": []
    },
    {
        "id": "d5c7fed7c8271d2b",
        "type": "ui_text",
        "z": "3078d2e5e2fd43ad",
        "group": "2e34d2833eadd341",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "T°C lue",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "022ef7f25dfd6e3a",
        "type": "debug",
        "z": "3078d2e5e2fd43ad",
        "name": "Input",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 440,
        "wires": []
    },
    {
        "id": "26da13d9c3ab67da",
        "type": "ui_chart",
        "z": "3078d2e5e2fd43ad",
        "name": "",
        "group": "2e34d2833eadd341",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Historique des températures",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "01d1f21e3d4636ff",
        "type": "ui_button",
        "z": "3078d2e5e2fd43ad",
        "name": "",
        "group": "2e34d2833eadd341",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "RAZ Historique",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset",
        "payloadType": "str",
        "topic": "Bp2",
        "topicType": "msg",
        "x": 1120,
        "y": 480,
        "wires": [
            [
                "949cc9881ac38ad4"
            ]
        ]
    },
    {
        "id": "949cc9881ac38ad4",
        "type": "function",
        "z": "3078d2e5e2fd43ad",
        "name": "reset Historique",
        "func": "// Si le message est \"reset\", vider l'histogramme\nif (msg.payload === \"reset\") {\n    // Pour réinitialiser le chart, on envoie une charge utile vide\n    return { payload: [] };\n    return msg.payload = 9999\n}\n\n// Si le message est autre chose, passer le message tel quel pour le flux normal\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "26da13d9c3ab67da"
            ]
        ]
    },
    {
        "id": "63560cd1b71d24f8",
        "type": "ui_button",
        "z": "3078d2e5e2fd43ad",
        "name": "",
        "group": "2e34d2833eadd341",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "RAZ températures min et max",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset",
        "payloadType": "str",
        "topic": "Bp2",
        "topicType": "msg",
        "x": 830,
        "y": 620,
        "wires": [
            [
                "f01c90f94ce0b68e",
                "083e3533512a94ba"
            ]
        ]
    },
    {
        "id": "9c684269eb5b291f",
        "type": "ui_spacer",
        "z": "3078d2e5e2fd43ad",
        "name": "spacer",
        "group": "2e34d2833eadd341",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "6204312223ab7705",
        "type": "ui_spacer",
        "z": "3078d2e5e2fd43ad",
        "name": "spacer",
        "group": "2e34d2833eadd341",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "b2b88afae323197b",
        "type": "mqtt-broker",
        "name": "Robry Thermistance",
        "broker": "eu1.cloud.thethings.network",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2e34d2833eadd341",
        "type": "ui_group",
        "name": "Robry Thermistance board",
        "tab": "65cd107cb6f0ad34",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65cd107cb6f0ad34",
        "type": "ui_tab",
        "name": "Dash 1",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]